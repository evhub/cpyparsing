name: Build

on: [push, pull_request, release]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4

      # Used to host cibuildwheel
      - uses: actions/setup-python@v5

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.18.1

      - name: Build wheels
        run: python -m cibuildwheel --output-dir dist
        # to supply options, put them in 'env', like:
        # env:
        #   CIBW_SOME_OPTION: value

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./dist/*.whl

  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    #   with:
    #     fetch-depth: 0  # Optional, use if you use setuptools_scm
    #     submodules: true  # Optional, use if you have submodules

    - uses: actions/setup-python@v5

    - name: Build SDist
      run: python ./setup.py sdist

    - uses: actions/upload-artifact@v4
      with:
        name: cibw-wheels-sdist
        path: ./dist/*.tar.gz

  upload_all:
    needs: [build_wheels, make_sdist]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/cpyparsing
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - uses: actions/download-artifact@v4
      with:
        pattern: cibw-wheels-*
        merge-multiple: true
        path: dist

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
      continue-on-error: true
